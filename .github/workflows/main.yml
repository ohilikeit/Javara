name: GPT Code Review on Entire PR Diff

on:
  pull_request_target:
    types: [opened, reopened, synchronize]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  run_code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debugging
        run: |
          echo "$JSON_PAYLOAD"
          curl -v https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "$JSON_PAYLOAD"
  
      - name: Debug OPENAI_API_KEY
        run: |
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "OPENAI_API_KEY is not set or empty!"
            exit 1
          else
            echo "OPENAI_API_KEY is set."
          fi
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # 확장자 필터를 추가하여 .ts, .tsx, .json, .yml, .sql, .prisma 파일만 포함하도록 설정
      - name: Fetch PR Diff
        run: |
          git fetch origin +refs/pull/${{ github.event.pull_request.number }}/merge
          git diff origin/${{ github.event.pull_request.base.ref }}...origin/${{ github.event.pull_request.head.ref }} \
          -- '*.ts' '*.tsx' '*.json' '*.yml' '*.sql' '*.prisma' > pr_diff.txt

      - name: Read Prompt file
        id: prompt
        uses: juliangruber/read-file-action@v1
        with:
          path: ./.github/workflows/code-review-prompt.txt

      - name: Read PR Diff
        id: diff
        uses: juliangruber/read-file-action@v1
        with:
          path: ./pr_diff.txt

      - name: Combine Prompt and Diff
        run: |
          cat <<'EOF' > combined_prompt.txt
          ${{ steps.prompt.outputs.content }}

          ----- PR DIFF START -----
          ${{ steps.diff.outputs.content }}
          ----- PR DIFF END -----
          EOF

      - name: Run GPT Code Review Once via curl
        id: gpt_call
        run: |
          set -euo pipefail

          JSON_PAYLOAD=$(jq -Rs --arg system_msg "You are a senior developer ..." '{
            "model": "gpt-4o-mini",
            "messages": [
              {
                "role": "system",
                "content": $system_msg
              },
              {
                "role": "user",
                "content": .
              }
            ],
            "temperature": 0.7,
            "max_tokens": 16384
          }' combined_prompt.txt)

          RESPONSE=$(curl -fsS https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "$JSON_PAYLOAD")

          CONTENT=$(echo "$RESPONSE" | jq -r -e '.choices[0].message.content')

          {
            echo "content<<EOF"
            echo "$CONTENT"
            echo "EOF"
          } >> $GITHUB_OUTPUT
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Post comment on PR
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            prNumber=${{ github.event.pull_request.number }}
          else
            prNumber=${{ github.event.inputs.pr_number }}
          fi

          BODY=$(printf %s "${{ steps.gpt_call.outputs.content }}" | jq -Rs .)

          curl -sS \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -X POST \
            -d "{\"body\": ${BODY}}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${prNumber}/comments"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
